'OHRRPGCE - yetmore2.bi
'(C) Copyright 1997-2006 James Paige and Hamster Republic Productions
'Please read LICENSE.txt for GPL License details and disclaimer of liability
'See README.txt for code docs and apologies for crappyness of this code ;)
'Auto-generated by MAKEBI from yetmore2.bas

#IFNDEF YETMORE2_BI
#DEFINE YETMORE2_BI

declare sub cathero
declare function cropmovement (x, y, xgo, ygo)
declare sub defaultc
declare sub drawnpcs
declare sub forcedismount (choosep, say, sayer, showsay, say$(), saytag(), choose$(), chtag(), saybit(), sayenh(), catd(), foep)
declare function framewalkabout (x, y, framex, framey, mapwide, maphigh, wrapmode)
declare function getsongname$ (num)
declare sub initgamedefaults
declare sub innrestore (stat())
declare function isonscreen (x, y)
declare sub setmapxy
declare sub setscriptarg (arg, value)
declare sub setusermenu (menu$(), mi())
declare sub showplotstrings
declare function str2int (stri$)
declare function str2lng& (stri$)
declare sub strgrabber (s$, maxl)
declare sub touchfile (f$)
declare sub makebackups
declare sub correctbackdrop
declare sub cleanuptemp
declare function checkfordeath (stat())
declare sub aheadxy (x, y, direction, distance)
declare sub exitprogram (needfade)
declare sub keyboardsetup
declare sub verquit
declare function titlescr 
declare sub reloadnpc (stat())
declare function mapstatetemp$(mapnum, prefix$)
declare sub savemapstate_gmap(mapnum, prefix$)
declare sub savemapstate_npcl(mapnum, prefix$)
declare sub savemapstate_npcd(mapnum, prefix$)
declare sub savemapstate_tilemap(mapnum, prefix$)
declare sub savemapstate_passmap(mapnum, prefix$)
declare sub savemapstate (mapnum, savemask = 255, prefix$)
declare sub loadmapstate_gmap (mapnum, prefix$, dontfallback = 0)
declare sub loadmapstate_npcl (mapnum, prefix$, dontfallback = 0)
declare sub loadmapstate_npcd (mapnum, prefix$, dontfallback = 0)
declare sub loadmapstate_tilemap (mapnum, prefix$, dontfallback = 0)
declare sub loadmapstate_passmap (mapnum, prefix$, dontfallback = 0)
declare sub loadmapstate (mapnum, loadmask, prefix$, dontfallback = 0)
declare sub deletemapstate (filebase$, killmask)
declare sub deletetemps
declare function decodetrigger (trigger, trigtype)

#ENDIF
